---
import BaseLayout from "../layouts/BaseLayout.astro";
import {
  getLangFromUrl,
  useTranslatedPath,
  useTranslations,
} from "../i18n/utils";
import Hero from "../components/Hero.astro";
import Icon from "../components/Icon.astro";
import Pill from "../components/Pill.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

const tags = [t("life"), t("work"), t("study")];

const nowMarkdown = await Astro.glob("../content/now/*.md");
const NowMarkdownContent = nowMarkdown.find(({ file }) =>
  file.endsWith(`${lang}.md`)
)?.Content;
---

<BaseLayout
  title={`${t("now.title")} | ${t("title")}`}
  description={t("now.description")}
>
  <div class="stack gap-15">
    <header class="stack gap-10">
      <div class="wrapper stack gap-2">
        <a class="back-link" href={translatePath("/")}>
          <Icon icon="arrow-left" />
          {t("home")}
        </a>
      </div>

      <Hero title={t("now.title")} align="center">
        <div class="details">
          <div class="tags">
            {tags.map((tag) => <Pill>{tag}</Pill>)}
          </div>
          <p class="description">{t("now.description")}</p>
        </div>
      </Hero>
    </header>
  </div>

  <div class="content">
    {
      NowMarkdownContent ? (
        <NowMarkdownContent />
      ) : (
        <div>
          Not find now content, go
          <a href="/now">default language version</a>
        </div>
      )
    }
  </div>
</BaseLayout>

<style>
  header {
    padding-bottom: 2.5rem;
    border-bottom: 1px solid var(--gray-800);
  }

  .details {
    display: flex;
    flex-direction: column;
    padding: 0.5rem;
    gap: 1.5rem;
    justify-content: space-between;
    align-items: center;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
  }

  .content {
    max-width: 35rem;
    margin: 0 auto;
    margin-bottom: 1rem;
    padding: 0 1rem;

    h1,
    h2,
    h3 {
      font-size: 2rem;
      margin: 1rem 0;
    }

    h1 {
      font-size: 2.5rem;
    }

    h2 {
      font-size: 1.5rem;
    }

    li {
      margin-bottom: 0.5rem;
    }
  }

  .back-link,
  .content :global(a) {
    text-decoration: 1px solid underline transparent;
    text-underline-offset: 0.25em;
    transition: text-decoration-color var(--theme-transition);
  }

  .back-link:hover,
  .back-link:focus,
  .content :global(a:hover),
  .content :global(a:focus) {
    text-decoration-color: currentColor;
  }

  @media (min-width: 50em) {
    .back-link {
      display: block;
      align-self: flex-start;
    }

    .content :global(blockquote) {
      font-size: var(--text-2xl);
    }
  }
</style>
